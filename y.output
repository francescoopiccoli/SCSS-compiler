Terminals unused in grammar

    LP
    RP
    SEMI
    OP_ASSIGN
    OP_EXP
    ID
    EXIT
    RETURN
    QUIT
    OP_COMP
    OP_MINUS
    OP_PLUS
    OP_MULT
    OP_DIV
    UMINUS
    OP_I


Rules useless in parser due to conflicts

    3 S: %empty

    4 ST: %empty

    7 VARDECL: %empty

    9 CSSRULE: %empty
   10        | NUM


State 0 conflicts: 1 shift/reduce, 6 reduce/reduce
State 1 conflicts: 2 reduce/reduce
State 3 conflicts: 1 shift/reduce, 6 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: %empty
    2  | ST S
    3  | %empty

    4 ST: %empty
    5   | VARDECL
    6   | CSSRULE

    7 VARDECL: %empty
    8        | NUM

    9 CSSRULE: %empty
   10        | NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LP (258)
    RP (259)
    NUM (260) 8 10
    SEMI (261)
    OP_ASSIGN (262)
    OP_EXP (263)
    ID (264)
    EXIT (265)
    RETURN (266)
    QUIT (267)
    OP_COMP (268)
    OP_MINUS (269)
    OP_PLUS (270)
    OP_MULT (271)
    OP_DIV (272)
    UMINUS (273)
    OP_I (274)


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    S (21)
        on left: 1 2 3
        on right: 0 2
    ST (22)
        on left: 4 5 6
        on right: 2
    VARDECL (23)
        on left: 7 8
        on right: 5
    CSSRULE (24)
        on left: 9 10
        on right: 6


State 0

    0 $accept: . S $end

    NUM  shift, and go to state 1

    $end      reduce using rule 1 (S)
    $end      [reduce using rule 3 (S)]
    $end      [reduce using rule 4 (ST)]
    $end      [reduce using rule 7 (VARDECL)]
    $end      [reduce using rule 9 (CSSRULE)]
    NUM       [reduce using rule 4 (ST)]
    NUM       [reduce using rule 7 (VARDECL)]
    NUM       [reduce using rule 9 (CSSRULE)]
    $default  reduce using rule 1 (S)

    S        go to state 2
    ST       go to state 3
    VARDECL  go to state 4
    CSSRULE  go to state 5


State 1

    8 VARDECL: NUM .
   10 CSSRULE: NUM .

    $end      reduce using rule 8 (VARDECL)
    $end      [reduce using rule 10 (CSSRULE)]
    NUM       reduce using rule 8 (VARDECL)
    NUM       [reduce using rule 10 (CSSRULE)]
    $default  reduce using rule 8 (VARDECL)


State 2

    0 $accept: S . $end

    $end  shift, and go to state 6


State 3

    2 S: ST . S

    NUM  shift, and go to state 1

    $end      reduce using rule 1 (S)
    $end      [reduce using rule 3 (S)]
    $end      [reduce using rule 4 (ST)]
    $end      [reduce using rule 7 (VARDECL)]
    $end      [reduce using rule 9 (CSSRULE)]
    NUM       [reduce using rule 4 (ST)]
    NUM       [reduce using rule 7 (VARDECL)]
    NUM       [reduce using rule 9 (CSSRULE)]
    $default  reduce using rule 1 (S)

    S        go to state 7
    ST       go to state 3
    VARDECL  go to state 4
    CSSRULE  go to state 5


State 4

    5 ST: VARDECL .

    $default  reduce using rule 5 (ST)


State 5

    6 ST: CSSRULE .

    $default  reduce using rule 6 (ST)


State 6

    0 $accept: S $end .

    $default  accept


State 7

    2 S: ST S .

    $default  reduce using rule 2 (S)
